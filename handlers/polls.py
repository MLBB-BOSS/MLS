# handlers/polls.py

import logging
from telegram import Update
from telegram.ext import ContextTypes
from handlers.states import States
from handlers.start_handler import start

logger = logging.getLogger(__name__)

async def polls_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_input = update.message.text.strip()
    user_id = update.effective_user.id
    current_time = context.application.loop.time()
    context.bot_data.setdefault('last_message_time', {})[user_id] = current_time
    logger.info(f"–í–∏–±—ñ—Ä –≤ –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è—Ö: {user_input}")

    if user_input == "üìä –ü–æ—Ç–æ—á–Ω—ñ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è":
        await send_current_polls(update, context)
        return States.POLLS
    elif user_input == "üó≥ –ì–æ–ª–æ—Å—É–≤–∞—Ç–∏":
        await vote_in_poll(update, context)
        return States.POLLS
    elif user_input == "üîô –ù–∞–∑–∞–¥":
        await start(update, context)
        return States.MAIN_MENU
    else:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–±—Ä–æ–±–∏—Ç–∏ –≤–∞—à –∑–∞–ø–∏—Ç.")
        return States.POLLS

async def send_current_polls(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    polls = (
        "üìä **–ü–æ—Ç–æ—á–Ω—ñ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è:**\n\n"
        "1Ô∏è‚É£ –Ø–∫–∏–π –≤–∞—à —É–ª—é–±–ª–µ–Ω–∏–π –∫–ª–∞—Å –≥–µ—Ä–æ—ó–≤?\n"
        "2Ô∏è‚É£ –Ø–∫–∞ –≤–∞—à–∞ —É–ª—é–±–ª–µ–Ω–∞ –∫–∞—Ä—Ç–∞?\n\n"
        "üîó –í–∏–±–µ—Ä—ñ—Ç—å 'üó≥ –ì–æ–ª–æ—Å—É–≤–∞—Ç–∏', —â–æ–± –≤–∑—è—Ç–∏ —É—á–∞—Å—Ç—å."
    )
    await update.message.reply_text(polls, parse_mode='Markdown')

async def vote_in_poll(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("üó≥ –§—É–Ω–∫—Ü—ñ—è –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è —â–µ –Ω–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞.")
