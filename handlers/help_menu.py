# handlers/help_menu.py
from telegram import Update
from telegram.ext import ContextTypes
from handlers import States

async def handle_help_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_input = update.message.text
    user_id = update.effective_user.id
    context.bot_data['last_message_time'][user_id] = context.application.loop.time()
    logger = context.application.job_queue.logger
    logger.info(f"–í–∏–±—ñ—Ä –≤ –î–æ–ø–æ–º–æ–∑—ñ: {user_input}")
    
    if user_input == "‚ùì FAQ":
        await send_faq(update, context)
        return States.HELP_MENU
    elif user_input == "üí¨ –ñ–∏–≤–∏–π —á–∞—Ç –ø—ñ–¥—Ç—Ä–∏–º–∫–∏":
        await send_live_support(update, context)
        return States.HELP_MENU
    elif user_input == "üêû –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫–∏":
        await send_bug_report(update, context)
        return States.HELP_MENU
    elif user_input == "üîô –ù–∞–∑–∞–¥":
        await start(update, context)
        return States.MAIN_MENU
    else:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–±—Ä–æ–±–∏—Ç–∏ –≤–∞—à –∑–∞–ø–∏—Ç.")
        return States.HELP_MENU

async def send_faq(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    faq = "‚ùì **FAQ:**\n\n" \
          "‚Ä¢ **–Ø–∫ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è?** –ü–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó.\n" \
          "‚Ä¢ **–Ø–∫ –æ–±—Ä–∞—Ç–∏ –≥–µ—Ä–æ—è?** –í–∏–≤—á—ñ—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≥–µ—Ä–æ—ó–≤ —É —Ä–æ–∑–¥—ñ–ª—ñ –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ.\n" \
          "‚Ä¢ **–©–æ —Ä–æ–±–∏—Ç–∏ –ø—Ä–∏ –±–∞–≥–∞—Ö?** –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ñ–æ—Ä–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫–∏.\n\n" \
          "üîó –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://example.com/faq"
    await update.message.reply_text(faq, parse_mode='HTML', disable_web_page_preview=True)

async def send_live_support(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    live_support = "üí¨ **–ñ–∏–≤–∏–π —á–∞—Ç –ø—ñ–¥—Ç—Ä–∏–º–∫–∏:**\n\n" \
                   "–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∞–±–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –Ω–∞—à–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏:\n\n" \
                   "üîó [–ü—ñ–¥—Ç—Ä–∏–º–∫–∞](https://t.me/your_support_chat)"
    await update.message.reply_text(live_support, parse_mode='HTML', disable_web_page_preview=True)

async def send_bug_report(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    bug_report = "üêû **–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫–∏:**\n\n" \
                 "–Ø–∫—â–æ –≤–∏ –∑–Ω–∞–π—à–ª–∏ –±–∞–≥ –∞–±–æ –º–∞—î—Ç–µ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—É —Ñ–æ—Ä–º—É:\n\n" \
                 "üîó [–ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É](https://example.com/report-bug)"
    await update.message.reply_text(bug_report, parse_mode='HTML', disable_web_page_preview=True)
