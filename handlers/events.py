# handlers/events.py

import logging
from telegram import Update
from telegram.ext import ContextTypes
from handlers.states import States
from handlers.start_handler import start

logger = logging.getLogger(__name__)

async def events_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_input = update.message.text.strip()
    user_id = update.effective_user.id
    current_time = context.application.loop.time()
    context.bot_data.setdefault('last_message_time', {})[user_id] = current_time
    logger.info(f"–í–∏–±—ñ—Ä –≤ –ü–æ–¥—ñ—è—Ö: {user_input}")

    if user_input == "üéâ –ü–æ—Ç–æ—á–Ω—ñ –ø–æ–¥—ñ—ó":
        await send_current_events(update, context)
        return States.EVENTS
    elif user_input == "üìÖ –ú–∞–π–±—É—Ç–Ω—ñ –ø–æ–¥—ñ—ó":
        await send_upcoming_events(update, context)
        return States.EVENTS
    elif user_input == "üîô –ù–∞–∑–∞–¥":
        await start(update, context)
        return States.MAIN_MENU
    else:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–±—Ä–æ–±–∏—Ç–∏ –≤–∞—à –∑–∞–ø–∏—Ç.")
        return States.EVENTS

async def send_current_events(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    events = (
        "üéâ **–ü–æ—Ç–æ—á–Ω—ñ –ø–æ–¥—ñ—ó:**\n\n"
        "‚Ä¢ –ü–æ–¥—ñ—è '–ó–∏–º–æ–≤–∏–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—å' —Ç—Ä–∏–≤–∞—î –¥–æ 31 –≥—Ä—É–¥–Ω—è.\n"
        "‚Ä¢ –¢—É—Ä–Ω—ñ—Ä '–ë–∏—Ç–≤–∞ –∑–∞ —Å–ª–∞–≤—É' —Ä–æ–∑–ø–æ—á–∞–≤—Å—è!\n\n"
        "üîó –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://example.com/current-events"
    )
    await update.message.reply_text(events, parse_mode='Markdown', disable_web_page_preview=True)

async def send_upcoming_events(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    upcoming_events = (
        "üìÖ **–ú–∞–π–±—É—Ç–Ω—ñ –ø–æ–¥—ñ—ó:**\n\n"
        "‚Ä¢ –ù–æ–≤–∏–π —Å–µ–∑–æ–Ω —Ä–æ–∑–ø–æ—á–Ω–µ—Ç—å—Å—è 1 —Å—ñ—á–Ω—è.\n"
        "‚Ä¢ –ê–Ω–æ–Ω—Å –Ω–æ–≤–æ–≥–æ –≥–µ—Ä–æ—è 15 —Å—ñ—á–Ω—è.\n\n"
        "üîó –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://example.com/upcoming-events"
    )
    await update.message.reply_text(upcoming_events, parse_mode='Markdown', disable_web_page_preview=True)
