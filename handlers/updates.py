# handlers/updates.py

from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from handlers import States
import logging

logger = logging.getLogger(__name__)

async def handle_updates_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_input = update.message.text
    user_id = update.effective_user.id
    context.bot_data['last_message_time'][user_id] = context.application.loop.time()
    logger.info(f"–í–∏–±—ñ—Ä –≤ –û–Ω–æ–≤–ª–µ–Ω–Ω—è—Ö: {user_input}")
    
    if user_input == "üÜï –û—Å—Ç–∞–Ω–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è":
        await send_latest_updates(update, context)
        return States.UPDATES_MENU
    elif user_input == "üìÑ –ü–∞—Ç—á–Ω–æ—É—Ç–∏":
        await send_patch_notes(update, context)
        return States.UPDATES_MENU
    elif user_input == "üîô –ù–∞–∑–∞–¥":
        from handlers.start_handler import start
        await start(update, context)
        return States.MAIN_MENU
    else:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–±—Ä–æ–±–∏—Ç–∏ –≤–∞—à –∑–∞–ø–∏—Ç.")
        return States.UPDATES_MENU

async def send_latest_updates(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    updates = "üÜï **–û—Å—Ç–∞–Ω–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:**\n\n" \
              "‚Ä¢ –î–æ–¥–∞–Ω–æ –Ω–æ–≤–æ–≥–æ –≥–µ—Ä–æ—è.\n" \
              "‚Ä¢ –ü–æ–∫—Ä–∞—â–µ–Ω–æ –±–∞–ª–∞–Ω—Å –≥—Ä–∏.\n\n" \
              "üîó –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://example.com/latest-updates"
    await update.message.reply_text(updates, parse_mode='Markdown', disable_web_page_preview=True)

async def send_patch_notes(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    patch_notes = "üìÑ **–ü–∞—Ç—á–Ω–æ—É—Ç–∏:**\n\n" \
                  "‚Ä¢ –í–µ—Ä—Å—ñ—è 1.2.3:\n" \
                  "  - –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–º–∏–ª–∫–∏.\n" \
                  "  - –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å.\n\n" \
                  "üîó –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://example.com/patch-notes"
    await update.message.reply_text(patch_notes, parse_mode='Markdown', disable_web_page_preview=True)
