# handlers/comparisons.py

from telegram import Update
from telegram.ext import ContextTypes
from handlers import States
from utils.data_loader import load_json_data
import logging

logger = logging.getLogger(__name__)

async def handle_comparisons_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_input = update.message.text.strip()
    user_id = update.effective_user.id
    context.bot_data['last_message_time'][user_id] = context.application.loop.time()
    logger.info(f"–í–∏–±—ñ—Ä —É –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è—Ö: {user_input}")

    if user_input == "üîô –ù–∞–∑–∞–¥":
        from handlers.characters import handle_characters_menu
        await handle_characters_menu(update, context)
        return States.CHARACTERS_MENU
    else:
        # –õ–æ–≥—ñ–∫–∞ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≥–µ—Ä–æ—ó–≤
        await send_character_comparison(update, context)
        return States.COMPARISONS_MENU

async def send_character_comparison(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –ü—Ä–∏–∫–ª–∞–¥ –ø—Ä–æ—Å—Ç–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≥–µ—Ä–æ—ó–≤
    hero1 = "–î–∂–æ–Ω—Å–æ–Ω"
    hero2 = "–§—Ä—ñ–¥–æ–º"

    # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –≥–µ—Ä–æ—ó–≤ –∑ —Ñ–∞–π–ª—É
    heroes_data = load_json_data('data/characters.json').get('heroes', [])
    hero1_data = next((hero for hero in heroes_data if hero['name'] == hero1), None)
    hero2_data = next((hero for hero in heroes_data if hero['name'] == hero2), None)

    if hero1_data and hero2_data:
        comparison = (
            f"‚öîÔ∏è **–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≥–µ—Ä–æ—ó–≤:**\n\n"
            f"<b>{hero1_data['name']}:</b> HP: {hero1_data['hp']}, –ê—Ç–∞–∫–∞: {hero1_data['attack']}, –ó–∞—Ö–∏—Å—Ç: {hero1_data['defense']}\n"
            f"<b>{hero2_data['name']}:</b> HP: {hero2_data['hp']}, –ê—Ç–∞–∫–∞: {hero2_data['attack']}, –ó–∞—Ö–∏—Å—Ç: {hero2_data['defense']}\n\n"
            f"üîó –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://example.com/comparison"
        )
        await update.message.reply_text(comparison, parse_mode='HTML', disable_web_page_preview=True)
    else:
        await update.message.reply_text("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–¥–Ω–æ–≥–æ –∑ –≥–µ—Ä–æ—ó–≤.")
